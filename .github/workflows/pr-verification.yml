# centralspendshield/.github/workflows/pr-verification.yml
name: PR Verification (All Terraform Modules)

on:
  workflow_call: {}
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write

jobs:
  find-all-terraform-modules:
    name: Find All Terraform Modules
    runs-on: ubuntu-latest
    outputs:
      tf_dirs: ${{ steps.set-tf-dirs.outputs.tf_dirs }}
    steps:
      - uses: actions/checkout@v4

      - name: Discover all folders containing .tf
        id: set-tf-dirs
        run: |
          mapfile -t tf_dirs < <(
            find . -type f -name '*.tf' -not -path './.git/*' \
              | xargs -n1 dirname \
              | sort -u
          )
          if [ ${#tf_dirs[@]} -eq 0 ]; then
            echo "tf_dirs=[]" >> "$GITHUB_OUTPUT"
          else
            tf_dirs_json=$(jq -c -n '$ARGS.positional' --args "${tf_dirs[@]}")
            echo "tf_dirs=$tf_dirs_json" >> "$GITHUB_OUTPUT"
          fi

  terraform-plan:
    name: Terraform Plan
    needs: find-all-terraform-modules
    if: needs.find-all-terraform-modules.outputs.tf_dirs != '[]'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dir: ${{ fromJson(needs.find-all-terraform-modules.outputs.tf_dirs) }}
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - run: terraform init
        working-directory: ${{ matrix.dir }}
      - run: terraform validate
        working-directory: ${{ matrix.dir }}
      - run: terraform plan -out=plan.out
        working-directory: ${{ matrix.dir }}
      
      - name: Generate Terraform plan JSON
        run: terraform show -json plan.out > plan.json
        working-directory: ${{ matrix.dir }}
      
      - name: Copy check.py to current directory
        run: cp .github/workflows/check.py .
        working-directory: ${{ matrix.dir }}
      
      - name: Run Terraform plan analysis
        id: plan-analysis
        run: |
          echo "PLAN_OUTPUT<<EOF" >> $GITHUB_OUTPUT
          python check.py
          echo "EOF" >> $GITHUB_OUTPUT
        working-directory: ${{ matrix.dir }}
      
      - name: Comment PR with Terraform plan changes
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `## Terraform Plan Changes for \`${{ matrix.dir }}\`
            
            \`\`\`
            ${{ steps.plan-analysis.outputs.PLAN_OUTPUT }}
            \`\`\`
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });
