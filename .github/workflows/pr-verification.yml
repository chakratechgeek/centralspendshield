name: PR Verification (All Terraform Modules)

on:
  workflow_call:
    inputs:
      pr_number:
        description: 'Pull Request number to comment on'
        required: true
        type: string
      # If you truly need cross-repo comments, add owner/name inputs and PASS a PAT.
    secrets:
      # Optional PAT. If not supplied, we fall back to github.token.
      PR_COMMENT_TOKEN:
        required: false
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_DEFAULT_REGION:
        required: true

jobs:
  find-all-terraform-modules:
    name: Find All Terraform Modules
    runs-on: ubuntu-latest
    outputs:
      tf_dirs: ${{ steps.set-tf-dirs.outputs.tf_dirs }}
    steps:
      - uses: actions/checkout@v4

      - name: Ensure jq is available
        run: |
          if ! command -v jq >/dev/null 2>&1; then
            sudo apt-get update && sudo apt-get install -y jq
          fi

      - name: Discover all folders containing .tf
        id: set-tf-dirs
        shell: bash
        run: |
          mapfile -t tf_dirs < <(
            find . -type f -name '*.tf' -not -path './.git/*' \
              | xargs -n1 dirname | sort -u
          )
          if [ ${#tf_dirs[@]} -eq 0 ]; then
            echo "tf_dirs=[]" >> "$GITHUB_OUTPUT"
          else
            tf_dirs_json=$(jq -c -n '$ARGS.positional' --args "${tf_dirs[@]}")
            echo "tf_dirs=$tf_dirs_json" >> "$GITHUB_OUTPUT"
          fi

  terraform-plan:
    name: Terraform Plan
    needs: find-all-terraform-modules
    if: needs.find-all-terraform-modules.outputs.tf_dirs != '[]'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dir: ${{ fromJson(needs.find-all-terraform-modules.outputs.tf_dirs) }}
    env:
      AWS_ACCESS_KEY_ID:     ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION:    ${{ secrets.AWS_DEFAULT_REGION }}
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3

      - name: Terraform init
        run: terraform init
        working-directory: ${{ matrix.dir }}

      - name: Terraform validate
        run: terraform validate
        working-directory: ${{ matrix.dir }}

      - name: Terraform plan
        run: terraform plan -out=plan.out
        working-directory: ${{ matrix.dir }}

      - name: Generate Terraform plan JSON
        run: terraform show -json plan.out > plan.json
        working-directory: ${{ matrix.dir }}

      - name: Comment PR with plan result
        if: ${{ inputs.pr_number }}    # run only if PR number present
        uses: peter-evans/create-or-update-comment@v4
        with:
          # Use PAT if provided; otherwise fallback to the caller repo's github.token
          token: ${{ secrets.PR_COMMENT_TOKEN || github.token }}
          issue-number: ${{ inputs.pr_number }}
          body: |
            ## Terraform Plan for `${{ matrix.dir }}`
            ✅ Plan completed successfully.

            - **Directory**: `${{ matrix.dir }}`
            - **Status**: Plan generated
            - **Run**: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

  pr-verification:
    name: PR Verification Summary
    runs-on: ubuntu-latest
    needs: [find-all-terraform-modules, terraform-plan]
    if: always()
    steps:
      - name: Summarize
        run: |
          echo "✅ PR Verification completed"
          echo "Terraform modules: ${{ needs.find-all-terraform-modules.outputs.tf_dirs }}"
          echo "Plan job result: ${{ needs.terraform-plan.result }}"
